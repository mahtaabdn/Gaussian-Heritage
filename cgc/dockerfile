# Use the CUDA development image which includes the CUDA toolkit and `nvcc`
FROM pytorch/pytorch:1.12.1-cuda11.3-cudnn8-devel

# Set DEBIAN_FRONTEND to noninteractive to avoid interactive prompts during package installation
ARG DEBIAN_FRONTEND=noninteractive

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    wget \
    libgl1-mesa-glx \
    && rm -rf /var/lib/apt/lists/*

# Copy the current directory contents into the container at /app
COPY . /app

# Initialize Conda
RUN /opt/conda/bin/conda init bash

# Set the working directory
WORKDIR /app

# Set the environment variable for Conda
ENV PATH=/opt/conda/bin:$PATH

# Create a Conda environment named 'gaussian_grouping' with Python 3.8
RUN /opt/conda/bin/conda create -n gaussian_grouping python=3.8 -y

# Activate the Conda environment and install PyTorch and its dependencies using Conda
RUN /bin/bash -c "source activate gaussian_grouping && conda install pytorch==1.12.1 torchvision==0.13.1 torchaudio==0.12.1 cudatoolkit=11.3 -c pytorch"

# Install additional packages using pip
RUN /bin/bash -c "source activate gaussian_grouping && pip install plyfile==0.8.1 tqdm scipy wandb opencv-python scikit-learn lpips cmapy"

# Install additional packages using Conda
RUN /bin/bash -c "source activate gaussian_grouping && conda install matplotlib -y"
RUN /bin/bash -c "source activate gaussian_grouping && conda install numpy -y"
RUN /bin/bash -c "source activate gaussian_grouping && conda install pillow -y"

# Install additional submodules using pip inside the Conda environment
RUN /bin/bash -c "source activate gaussian_grouping && pip install ./submodules/diff-gaussian-rasterization/"
RUN /bin/bash -c "source activate gaussian_grouping && pip install ./submodules/simple-knn/"

# Command to keep the container running (if needed for debugging purposes)
CMD ["bash"]